# number of experiments where we pull draw 6 nums
experiments <- c(10,100,1000,10000)
# multiple plots
par(mfrow = c(2, 2))
for (j in 1:4) {
# number of experiments
n = experiments[j]
# vector for storing successes
success <- mat.or.vec(n,1)
# total number of times we get at least 3 nums right
rightFreq = 0
# pull 6 nums and see how many are right
for (i in 1:n) {
# randomSample <- rbinom(6,49,1/49)
randomSample <- rbinom(1,49,1/49)
for (k in 1:5) {
randomSample <- c(randomSample, rbinom(1,49-k,1/(49-k))
}
if ('12' %in% randomSample & '18' %in% randomSample & '21' %in% randomSample) {
rightFreq = rightFreq + 1
}
success[i] = rightFreq/i
}
plot(success,type="l",xlab="number of trials",ylab="relative frequency of correct nums")
}
# number of experiments where we pull draw 6 nums
experiments <- c(10,100,1000,10000)
# multiple plots
par(mfrow = c(2, 2))
for (j in 1:4) {
# number of experiments
n = experiments[j]
# vector for storing successes
success <- mat.or.vec(n,1)
# total number of times we get at least 3 nums right
rightFreq = 0
# pull 6 nums and see how many are right
for (i in 1:n) {
# randomSample <- rbinom(6,49,1/49)
randomSample <- rbinom(1,49,1/49)
for (k in 1:5)
randomSample <- c(randomSample, rbinom(1,49-k,1/(49-k))
if ('12' %in% randomSample & '18' %in% randomSample & '21' %in% randomSample)
rightFreq = rightFreq + 1
success[i] = rightFreq/i
}
plot(success,type="l",xlab="number of trials",ylab="relative frequency of correct nums")
}
# number of experiments where we pull draw 6 nums
experiments <- c(10,100,1000,10000)
# multiple plots
par(mfrow = c(2, 2))
for (j in 1:4) {
# number of experiments
n = experiments[j]
# vector for storing successes
success <- mat.or.vec(n,1)
# total number of times we get at least 3 nums right
rightFreq = 0
# pull 6 nums and see how many are right
for (i in 1:n) {
randomSample <- rbinom(6,49,1/49)
if ('12' %in% randomSample & '18' %in% randomSample & '21' %in% randomSample) {
rightFreq = rightFreq + 1
}
success[i] = rightFreq/i
}
plot(success,type="l",xlab="number of trials",ylab="relative frequency of correct nums")
}
randomSample <- rbinom(1,49,1/49)
for (k in 1:5) {
randomSample <- c(randomSample, rbinom(1,49-k,1/(49-k))
}
# number of experiments where we pull draw 6 nums
experiments <- c(10,100,1000,10000)
# multiple plots
par(mfrow = c(2, 2))
for (j in 1:4) {
# number of experiments
n = experiments[j]
# vector for storing successes
success <- mat.or.vec(n,1)
# total number of times we get at least 3 nums right
rightFreq = 0
# pull 6 nums and see how many are right
for (i in 1:n) {
# randomSample <- rbinom(6,49,1/49)
randomSample <- rbinom(1,49,1/49)
for (k in 1:5) {
randomSample <- c(randomSample, rbinom(1,49-k,1/(49-k)))
}
if ('12' %in% randomSample & '18' %in% randomSample & '21' %in% randomSample) {
rightFreq = rightFreq + 1
}
success[i] = rightFreq/i
}
plot(success,type="l",xlab="number of trials",ylab="relative frequency of correct nums")
}
# number of experiments where we pull draw 6 nums
experiments <- c(100,1000,10000,100000)
# multiple plots
par(mfrow = c(2, 2))
for (j in 1:4) {
# number of experiments
n = experiments[j]
# vector for storing successes
success <- mat.or.vec(n,1)
# total number of times we get at least 3 nums right
rightFreq = 0
# pull 6 nums and see how many are right
for (i in 1:n) {
# randomSample <- rbinom(6,49,1/49)
randomSample <- rbinom(1,49,1/49)
for (k in 1:5) {
randomSample <- c(randomSample, rbinom(1,49-k,1/(49-k)))
}
if ('12' %in% randomSample & '18' %in% randomSample & '21' %in% randomSample) {
rightFreq = rightFreq + 1
}
success[i] = rightFreq/i
}
plot(success,type="l",xlab="number of trials",ylab="relative frequency of correct nums")
}
runningProb <- 1
for (i in 0:5) {
runningProb = runningProb * dbinom(1, size=1, prob=1/(49-i))
}
6!/(3!*(6 - 3)!) * 43!/(3!*(43 - 3)!) * 1 / 49!/(6!*(49 - 6)!)
p = factorial(6)/(factorial(3)*factorial((6 - 3)) * factorial(43)/(factorial(3)*factorial((43 - 3)) * 1 / factorial(49)/(factorial(6)*factorial((49 - 6))
factorial(6)/(factorial(3)*factorial((6 - 3)) * factorial(43)/(factorial(3)*factorial((43 - 3)) * 1 / factorial(49)/(factorial(6)*factorial((49 - 6))
factorial(6)/(factorial(3)*factorial((6 - 3))) * factorial(43)/(factorial(3)*factorial((43 - 3))) * 1 / factorial(49)/(factorial(6)*factorial((49 - 6)))
factorial(6)/(48)
p = (factorial(6)/(factorial(3)*factorial(6 - 3))) * (factorial(43)/(factorial(3)*factorial(43 - 3))) * (1 / factorial(49)/(factorial(6)*factorial(49 - 6)))
p = (factorial(6)/(factorial(3)*factorial(6 - 3))) * (factorial(43)/(factorial(3)*factorial(43 - 3))) / (factorial(49)/(factorial(6)*factorial(49 - 6)))
factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices))
p2 = (factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices)))
# n
numbers = 49
# k
choices = 6
# m
matches = 3
p2 = (factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices)))
# probability of at least 3 girls
dbinom(5, size=5, prob=0.5) + dbinom(4, size=5, prob=0.5) + dbinom(3, size=5, prob=0.5)
# answer: 0.5 is the probability of having at least 3 girls in a family of 5 siblings
x <- c(0,1,2,3,4,5)
y <- vector()
runningProb <- 0
for (i in 0:5) {
runningProb = runningProb + dbinom(i, size=5, prob=0.5)
y <- c(y, (1 - runningProb) + dbinom(0, size=5, prob=0.5))
}
plot(x,y,ylim=c(0,1),xlim=c(0,5),type="h",xlab="number of girls",ylab="probability")
x <- c(0,1,2,3,4,5, 6)
y <- vector()
for (i in 0:6) {
y <- c(y, (factorial(choices)/(factorial(i)*factorial(choices - i))) * (factorial(numbers - choices)/(factorial(i)*factorial(numbers - choices - i))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices))))
}
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,1),xlim=c(0,5),type="h",xlab="number of matches",ylab="probability")
matches <- 0
# probability of at least 3 numbers matching ≈ 0.0176504
p = (factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices)))
matches <- 6
# probability of at least 3 numbers matching ≈ 0.0176504
p = (factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices)))
matches <- 3
# probability of at least 3 numbers matching ≈ 0.0176504
p = (factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices)))
# probability of winning the lottery: 9.932116e-11
dbinom(1, size=1, prob=1/49) * dbinom(1, size=1, prob=1/48) * dbinom(1, size=1, prob=1/47) * dbinom(1, size=1, prob=1/46) * dbinom(1, size=1, prob=1/45) * dbinom(1, size=1, prob=1/44)
# same thing only less hard-coded
runningProb <- 1
for (i in 0:5) {
runningProb = runningProb * dbinom(1, size=1, prob=1/(49-i))
}
numbers <- 49
choices <- 6
matches <- 3
# probability of at least 3 numbers matching ≈ 0.0176504
p = (factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices)))
x <- c(0,1,2,3,4,5, 6)
y <- vector()
for (i in 0:6) {
y <- c(y, (factorial(choices)/(factorial(i)*factorial(choices - i))) * (factorial(numbers - choices)/(factorial(i)*factorial(numbers - choices - i))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices))))
}
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,1),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
numbers <- 49
choices <- 6
matches <- 3
# probability of at least 3 numbers matching ≈ 0.0176504
p = (factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices)))
x <- c(0,1,2,3,4,5, 6)
y <- vector()
for (i in 0:6) {
y <- c(y, (factorial(choices)/(factorial(i)*factorial(choices - i))) * (factorial(numbers - choices)/(factorial(i)*factorial(numbers - choices - i))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices))))
}
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,1),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
numbers <- 49
choices <- 6
matches <- 2
# probability of at least 3 numbers matching ≈ 0.0176504
p = (factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices)))
numbers <- 49
choices <- 6
matches <- 3
# probability of at least 3 numbers matching ≈ 0.0176504
p = (factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) * 1 / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices)))
p2 = C(choices, matches)*C((numbers - choices),(choices - matches))*1/C(numbers, choices)
p2 = c(choices, matches)*c((numbers - choices),(choices - matches))*1/c(numbers, choices)
numbers <- 60
choices <- 6
matches <- 4
# probability of at least 3 numbers matching ≈ 0.0176504
p = (factorial(choices)/(factorial(matches)*factorial(choices - matches))) * (factorial(numbers - choices)/(factorial(matches)*factorial(numbers - choices - matches))) / (factorial(numbers)/(factorial(choices)*factorial(numbers - choices)))
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
N = 60
K = 6
M = 4
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
N = 49
K = 6
M = 3
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
M = 6
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
N = 49
K = 6
M = 6
x <- c(0,1,2,3,4,5, 6)
y <- vector()
for (i in 0:6) {
# replace M with i
y <- c(y, (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))))
}
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,1),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
N = 60 # number of lottery balls
K = 6 # numbers in a combination
M = 4 # number of matches
#equation to determine p of at least M matches in K selections with numbers from 1 to N
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
N = 60 # number of lottery balls
K = 6 # numbers in a combination
M = 6 # number of matches
#equation to determine p of at least M matches in K selections with numbers from 1 to N
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
N = 60 # number of lottery balls
K = 6 # numbers in a combination
M = 1 # number of matches
#equation to determine p of at least M matches in K selections with numbers from 1 to N
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
N = 49 # number of lottery balls
K = 6 # numbers in a combination
M = 1 # number of matches
#equation to determine p of at least M matches in K selections with numbers from 1 to N
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
N = 49 # number of lottery balls
K = 6 # numbers in a combination
M = 0 # number of matches
#equation to determine p of at least M matches in K selections with numbers from 1 to N
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
N = 49 # number of lottery balls
K = 6 # numbers in a combination
M = 4 # number of matches
#equation to determine p of at least M matches in K selections with numbers from 1 to N
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
N = 49 # number of lottery balls
K = 6 # numbers in a combination
M = 5 # number of matches
#equation to determine p of at least M matches in K selections with numbers from 1 to N
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
N = 49 # number of lottery balls
K = 6 # numbers in a combination
M = 2 # number of matches
#equation to determine p of at least M matches in K selections with numbers from 1 to N
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K)))
x <- c(0,1,2,3,4,5, 6)
y <- vector()
for (i in 0:6) {
# replace M with i
y <- c(y, (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
}
plot(x,y,ylim=c(0,1),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
plot(x,y,ylim=c(0,0.001),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
plot(x,y,ylim=c(0,0.01),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
plot(x,y,ylim=c(0,0.01),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
x <- c(0,1,2,3,4,5,6)
y <- vector()
y <- c(0)
sum <- 0
for (i in 0:6) {
# replace M with i
probs <- (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100
y <- c(y, probs)
sum = sum + probs
}
replace(y, y==0, sum)
plot(x,y,ylim=c(0,0.01),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
x <- c(0,1,2,3,4,5,6)
y <- vector()
y <- c(0)
sum <- 0
for (i in 1:6) {
# replace M with i
probs <- (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100
y <- c(y, probs)
sum = sum + probs
}
replace(y, y==0, 1 - sum)
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,0.01),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
x <- c(0,1,2,3,4,5,6)
y <- vector()
y <- c(0)
sum <- 0
for (i in 1:6) {
# replace M with i
probs <- (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100
y <- c(y, probs)
sum = sum + probs
}
replace(y, y==0, 1 - sum)
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,1),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
x <- c(0,1,2,3,4,5,6)
y <- vector()
y <- c(y, 0)
sum <- 0
for (i in 1:6) {
# replace M with i
probs <- (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100
y <- c(y, probs)
sum = sum + probs
}
replace(y, y==0, 1 - sum)
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,1),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
plot(x,y,ylim=c(0,1),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
x <- c(0,1,2,3,4,5,6)
y <- vector()
y <- c(y, 0)
sum <- 0
for (i in 1:6) {
# replace M with i
probs <- (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100
y <- c(y, probs)
sum = sum + probs
}
replace(y, y==0, 1 - sum(y, na.rm = FALSE))
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,1),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
x <- c(0,1,2,3,4,5,6)
y <- vector()
for (i in 0:6) {
# replace M with i
y <- c(y, (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
}
#replace(y, y==0, sumofAllOtherProbs)
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,0.01),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
x <- c(0,1,2,3,4,5,6)
y <- vector()
for (i in 0:6) {
# replace M with i
y <- c(y, (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
}
replace(y, y==0, 1 - sum(y) - (factorial(K)/(factorial(0)*factorial(K - 0))) * (factorial(N - K)/(factorial(K - 0)*factorial((N - K) - (K - 0)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,0.01),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
x <- c(0,1,2,3,4,5,6)
y <- vector()
for (i in 0:6) {
# replace M with i
y <- c(y, (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
}
y[0] <- (1 - sum(y) - (factorial(K)/(factorial(0)*factorial(K - 0))) * (factorial(N - K)/(factorial(K - 0)*factorial((N - K) - (K - 0)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,0.01),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
x <- c(0,1,2,3,4,5,6)
y <- vector()
for (i in 0:6) {
# replace M with i
y <- c(y, (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
}
y[0] <- (2)
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,0.01),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
x <- c(0,1,2,3,4,5,6)
y <- vector()
for (i in 0:6) {
# replace M with i
y <- c(y, (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
}
y[1] <- (2)
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,0.01),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
N = 49 # number of lottery balls
K = 6 # numbers in a combination
M = 3 # number of matches
# equation to determine p of at least M matches in K selections with numbers from 1 to N
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100
x <- c(0,1,2,3,4,5,6)
y <- vector()
for (i in 0:6) {
# replace M with i
y <- c(y, (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
}
y[1] <- (1 - sum(y) - (factorial(K)/(factorial(0)*factorial(K - 0))) * (factorial(N - K)/(factorial(K - 0)*factorial((N - K) - (K - 0)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,0.01),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
N = 49 # number of lottery balls
K = 6 # numbers in a combination
M = 3 # number of matches
# equation to determine p of at least M matches in K selections with numbers from 1 to N
(factorial(K)/(factorial(M)*factorial(K - M))) * (factorial(N - K)/(factorial(K - M)*factorial((N - K) - (K - M)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100
x <- c(0,1,2,3,4,5,6)
y <- vector()
for (i in 0:6) {
# replace M with i
y <- c(y, (factorial(K)/(factorial(i)*factorial(K - i))) * (factorial(N - K)/(factorial(K - i)*factorial((N - K) - (K - i)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
}
y[1] <- (1 - sum(y) - (factorial(K)/(factorial(0)*factorial(K - 0))) * (factorial(N - K)/(factorial(K - 0)*factorial((N - K) - (K - 0)))) *1 / (factorial(N)/(factorial(K)*factorial(N - K))) / 100)
# histogram with probability of atleast x matches in a lottery where 6 nums from 1-49 inclusive are drawn
plot(x,y,ylim=c(0,1),xlim=c(0,6),type="h",xlab="number of matches",ylab="probability")
points <- c(90,95,89,71,73,96,87,95 107,89,96,80,97,95,102,97,93 101,82,83,74,91,83,98,95 111,99 120,93,84)
# a
mean <- mean(points)
setwd("~/Dropbox/School/Spring 2015/370/ProbSet2")
points <- c(90,95,89,71,73,96,87,95 107,89,96,80,97,95,102,97,93 101,82,83,74,91,83,98,95 111,99 120,93,84)
# a
mean <- mean(points)
points <- c(90,95,89,71,73,96,87,95,107,89,96,80,97,95,102,97,93,101,82,83,74,91,83,98,95,111,99,120,93,84)
# a
mean <- mean(points)
points <- c(90,95,89,71,73,96,87,95,107,89,96,80,97,95,102,97,93,101,82,83,74,91,83,98,95,111,99,120,93,84)
# a
mean <- mean(points)
standard_error <- sd(points) / sqrt(length(points))
margin_of_error <- (1.96 * sd(points)) / sqrt(length(points))
upper_bound <- mean + margin_of_error
lower_bound <- mean - margin_of_error
male <- c(220.1,218.6,229.6,228.8,222.0,224.1,226.5)
female <- c(223.4,221.5,230.2,224.3,223.8,230.8)
# for this question, we want to conduct a 2 tailed, unpaired t-test, assuming unequal variances
p_val <- t.test(male,female)
bloodA <- c(248, 236, 269, 254, 249, 251, 260, 245, 239, 255)
bloodB <- c(380, 391, 377, 392, 398, 374)
wilcox.test(bloodA,bloodB)
